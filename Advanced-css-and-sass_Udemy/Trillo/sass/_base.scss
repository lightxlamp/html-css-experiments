:root {
    // COLORS
    --color-primary: #eb2f64;
    --color-primary-light: #FF3366;
    --color-primary-dark: #BA265D;

    --color-grey-light-1: #faf9f9;
    --color-grey-light-2: #f4f2f2;
    --color-grey-light-3: #f0eeee;
    --color-grey-light-4: #ccc;
    
    --color-grey-dark-1: #333;
    --color-grey-dark-2: #777;
    --color-grey-dark-3: #999;

    //SHADOWS
    --shadow-dark: 0 2rem 6rem rgba(0, 0, 0, .3);
    --shadow-light: 0 2rem 6rem rgba(0, 0, 0, .06);

    // LINE
    --line: 1px solid var(--color-grey-light-2);
}

// css variables does not work with media queries, so we created SASS variables again
$bp-largest: 75em; // 1200px / 16 = 75
$bp-large: 68.75em; // 1100px / 16 = 68.75
$bp-medium: 56.25em; // 900px / 16 = 56.25
$bp-small: 37.5em; // 600px / 16 = 37.5
$bp-smallest: 31.25em; // 500px / 16 = 31.25

// GLOBAL RESET
* {
    margin: 0;
    padding: 0;
}

*, 
*::before,
*::after {
    box-sizing: inherit;
}

html {
    box-sizing: border-box;
    font-size: 62.5%; // 1 rem = 10px (if user did not change his browser's default font size)

    @media only screen and (max-width: $bp-large) {
       // 1 rem is equal 10px. Let's decrease 1rem value for smaller displays
       font-size: 50%; // 8 / 16 = .5
       // But the width of the container now is not 1200px (120rem * 10), but 960px! (120rem * 8)
       // So ugly parts of background are visible again. So we adding max-width: 100% and width: 100% to 
       // the "largest" media query
    }
}

body {
    color: var(--color-grey-dark-2);
    font-family: 'Open Sans', sans-serif; // if 'Open Sans failed to load, then load sans-serif'
    font-weight: 400;
    line-height: 1.6;
    background-image: linear-gradient(to right bottom, var(--color-primary-light), var(--color-primary-dark));
    //background-color: #eb2f64; 
    background-size: cover;
    background-repeat: no-repeat;
    min-height: 100vh;      
}